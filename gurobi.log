
Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 16 15:14:11 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 12:59:51 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 13:01:28 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 13:03:16 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 13:04:04 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 13:07:20 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 13:09:18 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:27:35 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:30:29 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:30:57 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:31:08 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:33:49 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:53:35 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:54:19 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Mon Sep 17 16:56:40 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:52:49 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:53:01 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:53:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:54:25 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:58:36 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 08:59:27 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:31:12 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:31:36 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:31:42 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:32:02 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:32:19 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 12:35:07 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 15:34:06 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 15:34:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Tue Sep 18 15:36:04 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:54:37 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:55:29 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:55:58 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:56:26 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:57:43 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 21:59:54 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:01:52 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:06:59 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:08:12 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:10:35 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:11:11 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:11:27 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:12:01 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:17:00 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:23:44 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [0e+00, 0e+00]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective -0.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Wed Sep 19 22:25:01 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:31:54 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:33:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:34:23 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:34:40 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:35:31 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:35:46 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:36:37 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 120 columns and 0 nonzeros
Variable types: 0 continuous, 120 integer (120 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:44:41 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:47:19 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 120 columns and 188 nonzeros
Variable types: 0 continuous, 120 integer (120 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:49:38 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 120 columns and 188 nonzeros
Variable types: 0 continuous, 120 integer (120 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:52:50 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 188 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 2 rows and 100 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:55:16 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 188 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Presolve removed 0 rows and 6 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:55:24 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 188 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [4e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 2 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 00:55:27 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 188 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 3e+03]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 2 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:27:55 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:29:01 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:30:41 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:31:06 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:33:22 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 100 columns and 0 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:36:23 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:37:56 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:38:38 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:38:59 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 160 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [8e+02, 8e+02]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+01]
Presolve removed 20 rows and 80 columns
Presolve time: 0.01s

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:39:12 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 160 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [8e+02, 8e+02]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+01]
Presolve removed 20 rows and 80 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:40:21 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 160 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [8e+01, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 9e+01]
Presolve removed 80 rows and 80 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:41:16 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:41:49 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+02]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:47:14 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:48:35 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:49:09 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:57:31 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 15:59:44 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:00:17 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:00:59 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 20 columns and 0 nonzeros
Variable types: 0 continuous, 20 integer (20 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:01:54 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:03:42 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:06:15 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:07:46 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:08:43 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:38:21 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:41:36 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:41:45 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 100 columns and 0 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:44:11 2018

Academic license - for non-commercial use only
Optimize a model with 0 rows, 100 columns and 0 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [0e+00, 0e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [0e+00, 0e+00]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:44:26 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 16:45:26 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 280 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [3e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:02:08 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 82 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.01 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:03:16 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 82 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:13:08 2018

Academic license - for non-commercial use only
Optimize a model with 2 rows, 100 columns and 2 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [8e+01, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:14:11 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 960 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.03s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.03 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:17:17 2018

Academic license - for non-commercial use only
Optimize a model with 160 rows, 100 columns and 960 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 160 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:22:48 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:40:33 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:42:11 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:46:57 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Thu Sep 20 23:47:11 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 08:45:31 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+02]
Found heuristic solution: objective 0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 2.77556e-17 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.775557561563e-17, best bound 2.775557561563e-17, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 08:45:56 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [3e+00, 8e+02]
Found heuristic solution: objective 0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 2.77556e-17 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.775557561563e-17, best bound 2.775557561563e-17, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 08:51:31 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 08:54:18 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+00]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective 1.0000000

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: 1 

Optimal solution found (tolerance 1.00e-04)
Best objective 1.000000000000e+00, best bound 1.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 09:41:12 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:12:59 2018

Academic license - for non-commercial use only
Optimize a model with 161 rows, 100 columns and 1040 nonzeros
Variable types: 0 continuous, 100 integer (100 binary)
Coefficient statistics:
  Matrix range     [1e+00, 8e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 8e+01]
Found heuristic solution: objective -0.0000000
Presolve removed 161 rows and 100 columns
Presolve time: 0.01s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 1: -0 

Optimal solution found (tolerance 1.00e-04)
Best objective -0.000000000000e+00, best bound -0.000000000000e+00, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:39:50 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:40:17 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:42:52 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:43:14 2018

Academic license - for non-commercial use only
Optimize a model with 41 rows, 30 columns and 250 nonzeros
Variable types: 0 continuous, 30 integer (30 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [2e+00, 7e+00]
Presolve removed 29 rows and 28 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:44:41 2018

Academic license - for non-commercial use only
Optimize a model with 41 rows, 30 columns and 250 nonzeros
Variable types: 0 continuous, 30 integer (30 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Presolve removed 29 rows and 28 columns
Presolve time: 0.00s

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 0

Model is infeasible
Best objective -, best bound -, gap -

Gurobi 8.0.1 (mac64, Python) logging started Fri Sep 21 14:47:24 2018

Academic license - for non-commercial use only
Optimize a model with 41 rows, 30 columns and 250 nonzeros
Variable types: 0 continuous, 30 integer (30 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Found heuristic solution: objective 0.1000000
Presolve removed 41 rows and 30 columns
Presolve time: 0.00s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.00 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 0.2 0.1 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e-01, best bound 2.000000000000e-01, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:32:06 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:34:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:37:17 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:40:38 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:41:51 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:43:05 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:43:46 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:44:15 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:45:25 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:45:37 2018

Academic license - for non-commercial use only
Optimize a model with 41 rows, 30 columns and 250 nonzeros
Variable types: 0 continuous, 30 integer (30 binary)
Coefficient statistics:
  Matrix range     [1e+00, 1e+01]
  Objective range  [1e-01, 1e-01]
  Bounds range     [1e+00, 1e+00]
  RHS range        [1e+00, 8e+00]
Found heuristic solution: objective 0.1000000
Presolve removed 41 rows and 30 columns
Presolve time: 0.02s
Presolve: All rows and columns removed

Explored 0 nodes (0 simplex iterations) in 0.02 seconds
Thread count was 1 (of 4 available processors)

Solution count 2: 0.2 0.1 

Optimal solution found (tolerance 1.00e-04)
Best objective 2.000000000000e-01, best bound 2.000000000000e-01, gap 0.0000%

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:45:52 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:50:16 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:50:35 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:51:11 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:52:13 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:54:43 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:55:42 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:56:11 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:57:42 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:57:56 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 16:58:17 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:02:43 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:03:11 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:03:44 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:04:08 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:05:47 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:05:57 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:07:23 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:08:18 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:11:48 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:19:08 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:19:31 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sat Sep 22 17:19:56 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:30:22 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:35:14 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:35:41 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:36:13 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:36:53 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:38:54 2018

Academic license - for non-commercial use only

Gurobi 8.0.1 (mac64, Python) logging started Sun Sep 23 15:39:06 2018

Academic license - for non-commercial use only
